name: 'Deprovision Everbyte Infrastructure'

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Setup terraform variables
    - name: Setup terraform variables
      id: vars
      run: |-
        cat > pipeline.auto.tfvars <<EOF
        environment="${{ vars.APP_ENVIRONMENT }}" 
        gcp_project="${{ vars.GCP_PROJECT }}" 
        gcp_region="${{ vars.GCP_REGION}}" 
        gcp_zone="${{ vars.GCP_ZONE }}" 
        subnet_cidr="${{ vars.SUBNET_CIDR }}"
        EOF
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 


    # Deletes the infrastructure
    - name: Terraform Destroy
      run: terraform destroy -auto-approve -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
